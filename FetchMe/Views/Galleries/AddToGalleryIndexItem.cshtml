@using FetchMe.Models.AzureConfigurationModels;
@inject Microsoft.Extensions.Options.IOptions<AzureStorageConfiguration> azureOptions
@{
    var baseURL100 = $"{azureOptions.Value.AzureStorageBaseURL}100";

}
@model FetchMe.Models.GalleryModels.UpsertImageInGalleryVM
@{
    var isChecked = (Model.IsInGallery) ? "checked=\"\"" : "";
}
    <div class="d-flex flex-row align-items-center m-2 rounded border box-shadow">
        <div class="pr-2 rounded-left">
            <img src="@baseURL100/@Model.Thumbnail" class="rounded-left" style="width:50px;height:50px;object-fit:cover;" width="50" height="50" loading="lazy" draggable="false" />
        </div>
        <div class="flex-grow-1 px-2">
            @Model.Title
        </div>
        @if (!Model.IsPublic)
        {
            <i class="fas fa-lock mx-2" data-toggle="tooltip" data-placement="top" title="This is a private gallery."></i>
        }
        @if (Model.IsProfessional)
        {
            <i class="fas fa-user-lock mx-2" data-toggle="tooltip" data-placement="top" title="This gallery is displayed on your profile."></i>
        }
        @if (Model.IsInGallery)
        {
            <button type="button" class="btn btn-danger mx-2 in-gallery" id="@Model.Id" gallery-in="@Model.IsInGallery.ToString()" gallery-id="@Model.Id" onclick="ImageInGalleryToggle(this)">Remove</button>
        }
        else
        {
            <button type="button" class="btn btn-success mx-2" id="@Model.Id" gallery-in="@Model.IsInGallery.ToString()" gallery-id="@Model.Id" onclick="ImageInGalleryToggle(this)">Add</button>
        }
    </div>
